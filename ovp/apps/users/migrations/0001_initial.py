# -*- coding: utf-8 -*-
# Generated by Django 1.11.14 on 2018-07-04 13:42
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import ovp.apps.channels.models.mixins
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
        ('uploads', '0001_initial'),
        ('core', '0001_initial'),
        ('channels', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('email', models.EmailField(max_length=190, verbose_name='Email')),
                ('locale', models.CharField(blank=True, default='en', max_length=8, verbose_name='Locale')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('slug', models.SlugField(blank=True, max_length=100, null=True, verbose_name='Slug')),
                ('phone', models.CharField(blank=True, max_length=30, null=True, verbose_name='Phone')),
                ('public', models.BooleanField(default=True, verbose_name='Public')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Staff')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Superuser')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('is_email_verified', models.BooleanField(default=False, verbose_name='Email verified')),
                ('is_subscribed_to_newsletter', models.BooleanField(default=True, verbose_name='Subscribed to newsletter')),
                ('joined_date', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Joined date')),
                ('modified_date', models.DateTimeField(auto_now=True, null=True, verbose_name='Modified date')),
                ('avatar', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='avatar_user', to='uploads.UploadedImage', verbose_name='avatar')),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_channel', to='channels.Channel')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            bases=(ovp.apps.channels.models.mixins.ChannelCreatorMixin, models.Model),
        ),
        migrations.CreateModel(
            name='PasswordHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hashed_password', models.CharField(max_length=300)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='passwordhistory_channel', to='channels.Channel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            bases=(ovp.apps.channels.models.mixins.ChannelCreatorMixin, models.Model),
        ),
        migrations.CreateModel(
            name='PasswordRecoveryToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=128, verbose_name='Token')),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created date')),
                ('used_date', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Used date')),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='passwordrecoverytoken_channel', to='channels.Channel')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            bases=(ovp.apps.channels.models.mixins.ChannelCreatorMixin, models.Model),
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(blank=True, max_length=300, null=True, verbose_name='Full name')),
                ('about', models.TextField(blank=True, null=True, verbose_name='About me')),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('unspecified', 'Unspecified')], default='unspecified', max_length=20, verbose_name='Gender')),
                ('hidden_address', models.BooleanField(default=False, verbose_name='Hidden address')),
                ('birthday_date', models.DateField(blank=True, null=True)),
                ('address', models.OneToOneField(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.GoogleAddress', verbose_name='address')),
                ('causes', models.ManyToManyField(to='core.Cause')),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userprofile_channel', to='channels.Channel')),
                ('skills', models.ManyToManyField(to='core.Skill')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='users_userprofile_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            bases=(ovp.apps.channels.models.mixins.ChannelCreatorMixin, models.Model),
        ),
        migrations.AlterUniqueTogether(
            name='user',
            unique_together=set([('email', 'channel'), ('slug', 'channel')]),
        ),
    ]
